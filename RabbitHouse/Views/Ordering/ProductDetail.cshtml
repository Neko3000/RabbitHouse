@model RabbitHouse.Models.Product
@{
    Layout = "~/Views/Shared/_LayoutNormal.cshtml";
    ViewBag.Title = "ProductDetail";
}

<div class="page-body">
    <section class="product-detail-bg">
        <div class="product-detail">
            <div class="container">
                <div class="product-detail-position">在线订单<span>></span>经典摩卡咖啡</div>
            </div>
            <div class="container">
                <div class="product-detail-img visible-sm visible-xs">
                    <img class="img-responsive" src="~/Content/img/ordering/product-detail/product-1/p1-d1.jpg" />
                </div>
                <div class="product-detail-carousel visible-lg visible-md">
                    <div id="carousel-example-generic" class="carousel carousel-solid slide" data-ride="carousel">
                        <!-- Indicators -->
                        <ol class="carousel-indicators">
                            <li data-target="#carousel-example-generic" data-slide-to="0" class="active"><div class="fill-round"></div></li>
                            <li data-target="#carousel-example-generic" data-slide-to="1"><div class="fill-round"></div></li>
                            <li data-target="#carousel-example-generic" data-slide-to="2"><div class="fill-round"></div></li>
                        </ol>
                        <!-- Wrapper for slides -->
                        <div class="carousel-inner" role="listbox">
                            <div class="item active">
                                <img src="~/Content/img/ordering/product-detail/product-1/p1-d1.jpg" alt="...">
                                <div class="carousel-caption">
                                    sorry can not find this page
                                </div>
                            </div>
                            <div class="item">
                                <img src="~/Content/img/ordering/product-detail/product-1/p1-d1.jpg" alt="...">
                                <div class="carousel-caption">
                                    find another
                                </div>
                            </div>
                        </div>
                        <!-- Controls -->
                        <a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev">
                            <div class="control-block" aria-hidden="true">
                                <i class="fa fa-angle-left"></i>
                            </div>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next">
                            <div class="control-block" aria-hidden="true">
                                <i class="fa fa-angle-right"></i>
                            </div>
                            <span class="sr-only">Previous</span>
                        </a>
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-9 col-sm-12">
                        <div class="product-detail-info">
                            <h2>@Model.Name</h2>
                            <h3>@Model.ShortDescription</h3>
                            <p>￥@Model.Price</p>
                            @if (Model.CurrentDiscount != null)
                            {
                                <div class="price-off-label">@(string.Format("{0:D2}", (int)(100 * (1 - @Model.CurrentDiscount))))%OFF</div>
                            }
                            <!--
                                <hr />
                                -->
                            <span>
                                @Model.Remark
                            </span>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-12">
                        <div class="product-detail-property-select">
                            <div class="select-block-container">
                                @using (Html.BeginForm("AddToCart", "ShoppingCart", FormMethod.Post))
                                {
                                    @Html.Hidden("ProductId", Model.Id)
                                    @*<input name="ProductPropertyId" />*@
                                    <div class="select-block">
                                        <div class="select-head">数量</div>
                                        <div class="count-selector">
                                            <input type="text" />
                                            <div id="button-sub"><i class="fa fa-angle-up"></i></div>
                                            <div id="button-add"><i class="fa fa-angle-down"></i></div>
                                        </div>
                                    </div>
                                    <div class="select-block">
                                        <div class="select-head">属性</div>
                                        <div class="property-group">
                                            <input name="ProductPropertyId" type="hidden" />
                                            @foreach (var prop in Model.Properties)
                                            {
                                                <div class="property" data-value="@prop.Id">
                                                    <img src="@prop.ImgUrl" />
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="position-middle-container product-detail-buy-button-group">
                                        <button class="btn btn-coffee buy-button position-middle-object" id="add-to-cart">加入购物车</button>
                                        @*<a href="@Url.Action("AddToCart", "ShoppingCart", new { productId = Model.Id, productPropertyId = 1 })">Add to cart</a>*@
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container">
                <hr />
                <div class="product-detail-content">
                    「咖啡摩卡，再来一杯~」<br />
                    啊——我们就知道又是到下午茶的时间了。<br />
                    <br />
                    使用优质巧克力粉与巧克力糖浆所创造的极致的艺术品——经典摩卡咖啡，作为本店的招牌咖啡，您一定会尝试一下。<br />
                    经典摩卡咖啡，使用原产地的摩卡咖啡豆。经过意大利式浓缩，辅以2/3的热牛奶，混以优质可可粉与可可浆，并配上少许肉桂，就成为了本店的招牌咖啡——经典摩卡咖啡。<br />
                    <br />
                    与义式卡布奇诺相同，摩卡咖啡上面也有牛奶泡沫，不过有些时候会以打发的鲜奶油取代。摩卡咖啡顶上常会加上一些肉桂粉或者可可粉。有时候也会在上面加上棉花糖增加风味或做为装饰。<br />
                    <br />
                    有种摩卡的变种是白摩卡咖啡（White Café Mocha），用白巧克力代替牛奶和黑巧克力。除了白摩卡咖啡之外，还有一些变种是用两种巧克力糖浆混合，它们有时被称为「斑马」（Zebras），也有时会被滑稽地叫作「燕尾服摩卡」（Tuxedo Mocha）。<br />
                    <br />
                    某些欧洲和中东的地方会以摩卡奇诺（Mocaccino）去形容加入了可可或者巧克力的义式拿铁咖啡。在美国摩卡奇诺就是指加入了巧克力的义式卡布奇诺。<br />
                    <br />
                    摩卡咖啡的名字起源于位在红海海边的叶门小镇摩卡。这个地方在15世纪时垄断了咖啡的出口贸易，特别是对阿拉伯半岛区域的咖啡出口贸易影响特别大。<br />
                    <br />
                    摩卡也是一种「巧克力色」的咖啡豆（来自叶门的摩卡），这让人产生了在咖啡混入巧克力的联想，并且发展出巧克力浓缩咖啡饮料。在欧洲，「摩卡咖啡」既可能指这种饮料，也可能仅仅指用摩卡咖啡豆泡出来的咖啡。<br />
                </div>
            </div>
        </div>
    </section>
</div>

@section scripts{
    <script>
        $(function () {
            
            $(".property-group .property").click(function () {
                $(this).siblings().removeClass('active');
                $(this).toggleClass('active');
            });

            $('form').submit(function () {
                    $('input[name="ProductPropertyId"]').val($(".property-group .property.active").data('value'));
                    $.ajax({
                        url: "@Url.Action("AddToCart","ShoppingCart")",
                        type: this.method,
                        data: $(this).serialize(),
                        success: function (result) {
                            alert(result);
                        }
                    });

                return false;
            });
        });
    </script>
    }